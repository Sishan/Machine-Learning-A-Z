q()
q()
q()
setwd("C:/Users/chen-/Desktop/Machine-Learning-A-Z-Hands-On-Python-R/Part 2 - Regression/Section 8 - Decision Tree Regression")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library(rpart)
regressor = rpart(formula = Salary ~ .,
data = dataset,
control = rpart.control(minsplit = 1))
y_pred = predict(regressor, data.frame(Level = 6.5))
setwd("C:/Users/chen-/Desktop/Machine-Learning-A-Z-Hands-On-Python-R/Part 2 - Regression/Section 9 - Random Forest Regression")
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[-2],
y = dataset$Salary,
ntree = 500)
y_pred = predict(regressor, data.frame(Level = 6.5))
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression)') +
xlab('Level') +
ylab('Salary')
install.packages('randomForest')
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[-2],
y = dataset$Salary,
ntree = 500)
# Predicting a new result with Random Forest Regression
y_pred = predict(regressor, data.frame(Level = 6.5))
# Visualising the Random Forest Regression results (higher resolution)
# install.packages('ggplot2')
library(ggplot2)
# Random Forest Regression
# Importing the dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[2:3]
# Splitting the dataset into the Training set and Test set
# # install.packages('caTools')
# library(caTools)
# set.seed(123)
# split = sample.split(dataset$Salary, SplitRatio = 2/3)
# training_set = subset(dataset, split == TRUE)
# test_set = subset(dataset, split == FALSE)
# Feature Scaling
# training_set = scale(training_set)
# test_set = scale(test_set)
# Fitting Random Forest Regression to the dataset
# install.packages('randomForest')
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[-2],
y = dataset$Salary,
ntree = 500)
# Visualising the Random Forest Regression results (higher resolution)
# install.packages('ggplot2')
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(level = 6.5))
set.seed(1234)
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 500)
y_pred = predict(regressor, data.frame(level = 6.5))
set.seed(1234)
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 500)
library(ggplot2)
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.01)
ggplot() +
geom_point(aes(x = dataset$Level, y = dataset$Salary),
colour = 'red') +
geom_line(aes(x = x_grid, y = predict(regressor, newdata = data.frame(Level = x_grid))),
colour = 'blue') +
ggtitle('Truth or Bluff (Random Forest Regression)') +
xlab('Level') +
ylab('Salary')
y_pred = predict(regressor, data.frame(level = 6.5))
y_pred = predict(regressor, data.frame(level = 6.5))
y_pred = predict(regressor, data.frame(Level = 6.5))
library(randomForest)
set.seed(1234)
regressor = randomForest(x = dataset[1],
y = dataset$Salary,
ntree = 100)
# Predicting a new result
y_pred = predict(regressor, data.frame(Level = 6.5))
